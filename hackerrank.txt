daignol sums and their difference

using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the diagonalDifference function below.
    static int diagonalDifference(int[][] arr) {
        int sum1=0;
        int sum2=0;
       for(int i=0;i<arr.GetLength(0);i++){
        sum1+=arr[i][i];
        sum2+=arr[i][arr.GetLength(0)-1-i];
       
       
       }
      int result=Math.Abs(sum1-sum2);
      return result;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        int[][] arr = new int[n][];

        for (int i = 0; i < n; i++) {
            arr[i] = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp));
        }

        int result = diagonalDifference(arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}


/* decimal plus minus */

using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the plusMinus function below.
    static void plusMinus(int[] arr) {
        int count1=0;
        int count2=0;
        int count3=0;
        int len=arr.Length;
      for(int i=0;i<arr.Length;i++){
          if(arr[i]>0){
              count1++;
          }
          else if(arr[i]<0){
              count2++;
          }
         else{
             if(arr[i]==0){
                 count3++;
             }
             else{
                 count3+=0;
             }
         }
        

      }
       double d1=(double)count1/(double)len;
         double d2=(double)count2/(double)len;
         double d3=(double)count3/(double)len;
         Console.WriteLine(d1);
          Console.WriteLine(d2);
           Console.WriteLine(d3);

    }

    static void Main(string[] args) {
        int n = Convert.ToInt32(Console.ReadLine());

        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp))
        ;
        plusMinus(arr);
    }
}

/* pattern*/
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the staircase function below.
    static void staircase(int n) {
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                Console.Write(" ");
            }
            for(int k=1;k<=i;k++){
             Console.Write("#");
            }
            Console.WriteLine("");
        }

    }

    static void Main(string[] args) {
        int n = Convert.ToInt32(Console.ReadLine());

        staircase(n);
    }
}

/*mini max  of sums in an array*/

using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the miniMaxSum function below.
    static void miniMaxSum(int[] arr) {
      long sum=0;
      long[]r=new long[arr.Length];
      int inc=0;
      for(int i=0;i<arr.Length;i++){
          sum+=arr[i];
      }
      for(int j=0;j<arr.Length;j++)
       {
           r[inc]=sum-arr[arr.Length-1-j];
           inc++;
       }
       long max=r.Max();
       long min=r.Min();
       Console.Write(min);
       Console.Write(" ");
       Console.Write(max);
    }

    static void Main(string[] args) {
        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp))
        ;
        miniMaxSum(arr);
    }
}
/*birthday candles*/
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the birthdayCakeCandles function below.
    static int birthdayCakeCandles(int[] ar) {
       int old=ar.Length;
       int tall=ar.Max();
       int count=0;
       for(int i=0;i<ar.Length;i++){
           if(ar[i]==tall){
               count++;
           }
           else{
               count+=0;
           }
       }
     return count;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int arCount = Convert.ToInt32(Console.ReadLine());

        int[] ar = Array.ConvertAll(Console.ReadLine().Split(' '), arTemp => Convert.ToInt32(arTemp))
        ;
        int result = birthdayCakeCandles(ar);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}

/* time conversion to 24*/
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution {

    /*
     * Complete the timeConversion function below.
     */
    static string timeConversion(string s) {
        /*
         * Write your code here.
         */
        int num=int.Parse(s.Substring(0,2));
        int sum=num+12;
        int len=s.Length-4;
    
        string a=sum.ToString();
        string b=s.Substring(2,len);
        return a+b;

    }

    static void Main(string[] args) {
        TextWriter tw = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        string result = timeConversion(s);

        tw.WriteLine(result);

        tw.Flush();
        tw.Close();
    }
}

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution {

    /*
     * Complete the timeConversion function below.
     */
    static string timeConversion(string s) {
        /*
         * Write your code here.
         */
         string result="";
          string p=s.Substring(8,2);//Am / pm
          int num=int.Parse(s.Substring(0,2));//hours
          if(p=="AM"){
              if(num==12){
                   num=00;
                   string a=num.ToString();
                   string b=num.ToString();
                   string c=s.Substring(2,s.Length-4);
                   result=a+b+c;
              }
              else{
                     string b=s.Substring(0,s.Length-2); 
                     result=b;
              }
          }
          else{
              if(num==12){
                  result=s.Substring(0,s.Length-2); 
              }
              else{
                int sum=num+12;
        int len=s.Length-4;
    
    
        string a=sum.ToString();
        string b=s.Substring(2,len);
        result=a+b;
              }
          }
        
       
        return result;

    }

    static void Main(string[] args) {
        TextWriter tw = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        string result = timeConversion(s);

        tw.WriteLine(result);

        tw.Flush();
        tw.Close();
    }
}
